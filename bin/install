#!/usr/bin/env bash
function unify_version {
  printf "%03d%03d%03d" $(echo "$1"| sed -e 's/-rc[0-9]//' | tr '.' ' ');
}

install_mongo() {
  local install_type=$1
  local version=$2
  local install_path=$3
  local platform=""
  local arch=""
  local tempdir=""
  local tempfile=""
  local filename=""
  local download_url=""
  local old_version=0

  [[ "$(unify_version "$version")" < "$(unify_version "4.0")" ]] && old_version=1 || old_version=0
  [ "Linux" = "$(uname)" ] && platform="linux" || platform="osx"
  [ "x86_64" = "$(uname -m)" ] && arch="x86_64" || arch="i686"
  [ "linux" = "${platform}" ] && tempdir=$(mktemp -d asdf-mongodb.XXXX) || tempdir=$(mktemp -dt asdf-mongodb.XXXX)

  if [[ "linux" = "${platform}" ]]; then
    if [[ "${old_version}" -eq 1 ]]; then
      filename="mongodb-linux-${arch}-${version}.tgz"
    else
      filename="mongodb-linux-${arch}-ubuntu2004-${version}.tgz"
    fi
  else
    if [[ "$(unify_version "$version")" > "$(unify_version "4.2")" ]]; then
      filename="mongodb-macos-x86_64-${version}.tgz"
    elif [[ "$(unify_version "$version")" < "$(unify_version "3.0")" ]]; then
      filename="mongodb-osx-x86_64-${version}.tgz"
    else
      filename="mongodb-osx-ssl-x86_64-${version}.tgz"
    fi
  fi

  tempfile="${tempdir}/${filename}"

  if [[ "${old_version}" -eq 1 ]]; then
    download_url="http://downloads.mongodb.org/${platform}/${filename}"
  else
    download_url="https://fastdl.mongodb.org/${platform}/${filename}"
  fi

  echo "download_url $download_url"

  curl -L "${download_url}" -o "${tempfile}"
  tar zxf "${tempfile}" -C $install_path --strip-components=1 || exit 1

  rm -rf "${tempdir}"
}

install_mongo $ASDF_INSTALL_TYPE $ASDF_INSTALL_VERSION $ASDF_INSTALL_PATH
